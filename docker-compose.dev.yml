services:
  # Django Service

  api:
    build:
      context: .
    container_name: DjangoAPI
    command: >
      bash -c "python manage.py collectstatic --no-input &&
      python manage.py makemigrations &&
      python manage.py migrate &&
      gunicorn --bind 0.0.0.0:8000 config.wsgi:application --timeout 200 --workers=5"
    ports:
      - 8000:8000
    restart: always
    depends_on:
      - db
    volumes:
      - .:/code
      - static_volume:/code/static/
      - media_volume:/code/media/
    env_file:
      - ./.env/.env.dev

  # PostgreSQL Database Service
  db:
    container_name: PostgreSQL
    image: postgres:16.2-alpine
    expose:
      - 5432
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env/.env.dev

    # Celery Service
  celery:
    build: .
    container_name: Celery
    command: celery -A config worker --loglevel=info
    volumes:
        - .:/code
    env_file:
      - ./.env/.env.prod
    depends_on:
        - api
        - redis

  #Redis Service
  redis:
    container_name: Redis
    image: "redis:7.2-alpine"

volumes:
  # will be used to store our ssl certificate and make it persistent as wel   
  static_volume:
  media_volume:
  postgres_data:


