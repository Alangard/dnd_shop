services:
  # Django Service

  # python manage.py makemigrations &&
  #     python manage.py migrate &&
  api:
    build: .
    container_name: DjangoAPI
    command: >
      bash -c "python manage.py collectstatic --no-input &&
      python manage.py makemigrations &&
      python manage.py migrate &&
      gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    ports:
      - 8000:8000
    restart: always
    depends_on:
      - db
      - redis
    volumes:
      - .:/code
      - static_volume:/code/static/
      - media_volume:/code/media/
    environment:
      - DEBUG=${DEBUG}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    env_file:
      - ./.env

  # PostgreSQL Database Service
  db:
    container_name: PostgreSQL
    image: postgres:16.2-alpine
    expose:
      - 5432
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    env_file:
      - ./.env

  #nginx
  nginx:
    image: nginx:1.25.4-alpine
    container_name: Nginx
    ports:
      - 80:80
    depends_on:
        - api
        - db
    volumes:
      - static_volume:/code/static/
      - media_volume:/code/media/


  # Celery Service
  celery:
      build: .
      container_name: Celery
      command: celery -A config worker --loglevel=info
      volumes:
          - .:/code
      environment:
          - DEBUG=${DEBUG}
          - ALLOWED_HOSTS=${ALLOWED_HOSTS}
          - CELERY_BROKER_URL=${CELERY_BROKER_URL}
          - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      depends_on:
          - api
          - redis

  # Redis Service
  redis:
    container_name: Redis
    image: "redis:7.2-alpine"

volumes:
  static_volume:
  media_volume:
  postgres_data:


